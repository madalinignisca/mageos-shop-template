#!/usr/bin/env bash

#       --enable-debug-logging=ENABLE-DEBUG-LOGGING                                                Enable debug logging
#       --enable-syslog-logging=ENABLE-SYSLOG-LOGGING                                              Enable syslog logging
#       --backend-frontname=BACKEND-FRONTNAME                                                      Backend frontname (will be autogenerated if missing)
#       --remote-storage-driver=REMOTE-STORAGE-DRIVER                                              Remote storage driver [default: "file"]
#       --remote-storage-prefix=REMOTE-STORAGE-PREFIX                                              Remote storage prefix [default: ""]
#       --remote-storage-endpoint=REMOTE-STORAGE-ENDPOINT                                          Remote storage endpoint
#       --remote-storage-bucket=REMOTE-STORAGE-BUCKET                                              Remote storage bucket
#       --remote-storage-region=REMOTE-STORAGE-REGION                                              Remote storage region
#       --remote-storage-key=REMOTE-STORAGE-KEY                                                    Remote storage access key [default: ""]
#       --remote-storage-secret=REMOTE-STORAGE-SECRET                                              Remote storage secret key [default: ""]
#       --remote-storage-path-style=REMOTE-STORAGE-PATH-STYLE                                      Remote storage path style [default: "0"]
#       --id_salt=ID_SALT                                                                          GraphQl Salt
#       --config-async=CONFIG-ASYNC                                                                Enable async Admin Config Save? 1 - Yes, 0 - No [default: 0]
#       --amqp-host=AMQP-HOST                                                                      Amqp server host [default: ""]
#       --amqp-port=AMQP-PORT                                                                      Amqp server port [default: "5672"]
#       --amqp-user=AMQP-USER                                                                      Amqp server username [default: ""]
#       --amqp-password=AMQP-PASSWORD                                                              Amqp server password [default: ""]
#       --amqp-virtualhost=AMQP-VIRTUALHOST                                                        Amqp virtualhost [default: "/"]
#       --amqp-ssl=AMQP-SSL                                                                        Amqp SSL [default: ""]
#       --amqp-ssl-options=AMQP-SSL-OPTIONS                                                        Amqp SSL Options (JSON) [default: ""]
#       --consumers-wait-for-messages=CONSUMERS-WAIT-FOR-MESSAGES                                  Should consumers wait for a message from the queue? 1 - Yes, 0 - No [default: 1]
#       --queue-default-connection=QUEUE-DEFAULT-CONNECTION                                        Message queues default connection. Can be 'db', 'amqp' or a custom queue system.The queue system must be installed and configured, otherwise messages won't be processed correctly.
#       --key=KEY                                                                                  Encryption key
#       --db-host=DB-HOST                                                                          Database server host [default: "localhost"]
#       --db-name=DB-NAME                                                                          Database name [default: "magento2"]
#       --db-user=DB-USER                                                                          Database server username [default: "root"]
#       --db-engine=DB-ENGINE                                                                      Database server engine [default: "innodb"]
#       --db-password=DB-PASSWORD                                                                  Database server password [default: ""]
#       --db-prefix=DB-PREFIX                                                                      Database table prefix [default: ""]
#       --db-model=DB-MODEL                                                                        Database type [default: "mysql4"]
#       --db-init-statements=DB-INIT-STATEMENTS                                                    Database  initial set of commands [default: "SET NAMES utf8;"]
#   -s, --skip-db-validation                                                                       If specified, then db connection validation will be skipped
#       --http-cache-hosts=HTTP-CACHE-HOSTS                                                        http Cache hosts
#       --db-ssl-key=DB-SSL-KEY                                                                    Full path of client key file in order to establish db connection through SSL [default: ""]
#       --db-ssl-cert=DB-SSL-CERT                                                                  Full path of client certificate file in order to establish db connection through SSL [default: ""]
#       --db-ssl-ca=DB-SSL-CA                                                                      Full path of server certificate file in order to establish db connection through SSL [default: ""]
#       --db-ssl-verify                                                                            Verify server certification
#       --session-save=SESSION-SAVE                                                                Session save handler [default: "files"]
#       --session-save-redis-host=SESSION-SAVE-REDIS-HOST                                          Fully qualified host name, IP address, or absolute path if using UNIX sockets
#       --session-save-redis-port=SESSION-SAVE-REDIS-PORT                                          Redis server listen port
#       --session-save-redis-password=SESSION-SAVE-REDIS-PASSWORD                                  Redis server password
#       --session-save-redis-timeout=SESSION-SAVE-REDIS-TIMEOUT                                    Connection timeout, in seconds
#       --session-save-redis-persistent-id=SESSION-SAVE-REDIS-PERSISTENT-ID                        Unique string to enable persistent connections
#       --session-save-redis-db=SESSION-SAVE-REDIS-DB                                              Redis database number
#       --session-save-redis-compression-threshold=SESSION-SAVE-REDIS-COMPRESSION-THRESHOLD        Redis compression threshold
#       --session-save-redis-compression-lib=SESSION-SAVE-REDIS-COMPRESSION-LIB                    Redis compression library. Values: gzip (default), lzf, lz4, snappy
#       --session-save-redis-log-level=SESSION-SAVE-REDIS-LOG-LEVEL                                Redis log level. Values: 0 (least verbose) to 7 (most verbose)
#       --session-save-redis-max-concurrency=SESSION-SAVE-REDIS-MAX-CONCURRENCY                    Maximum number of processes that can wait for a lock on one session
#       --session-save-redis-break-after-frontend=SESSION-SAVE-REDIS-BREAK-AFTER-FRONTEND          Number of seconds to wait before trying to break a lock for frontend session
#       --session-save-redis-break-after-adminhtml=SESSION-SAVE-REDIS-BREAK-AFTER-ADMINHTML        Number of seconds to wait before trying to break a lock for Admin session
#       --session-save-redis-first-lifetime=SESSION-SAVE-REDIS-FIRST-LIFETIME                      Lifetime, in seconds, of session for non-bots on the first write (use 0 to disable)
#       --session-save-redis-bot-first-lifetime=SESSION-SAVE-REDIS-BOT-FIRST-LIFETIME              Lifetime, in seconds, of session for bots on the first write (use 0 to disable)
#       --session-save-redis-bot-lifetime=SESSION-SAVE-REDIS-BOT-LIFETIME                          Lifetime of session for bots on subsequent writes (use 0 to disable)
#       --session-save-redis-disable-locking=SESSION-SAVE-REDIS-DISABLE-LOCKING                    Redis disable locking. Values: false (default), true
#       --session-save-redis-min-lifetime=SESSION-SAVE-REDIS-MIN-LIFETIME                          Redis min session lifetime, in seconds
#       --session-save-redis-max-lifetime=SESSION-SAVE-REDIS-MAX-LIFETIME                          Redis max session lifetime, in seconds
#       --session-save-redis-sentinel-master=SESSION-SAVE-REDIS-SENTINEL-MASTER                    Redis Sentinel master
#       --session-save-redis-sentinel-servers=SESSION-SAVE-REDIS-SENTINEL-SERVERS                  Redis Sentinel servers, comma separated
#       --session-save-redis-sentinel-verify-master=SESSION-SAVE-REDIS-SENTINEL-VERIFY-MASTER      Redis Sentinel verify master. Values: false (default), true
#       --session-save-redis-sentinel-connect-retries=SESSION-SAVE-REDIS-SENTINEL-CONNECT-RETRIES  Redis Sentinel connect retries.
#       --cache-backend=CACHE-BACKEND                                                              Default cache handler
#       --cache-backend-redis-server=CACHE-BACKEND-REDIS-SERVER                                    Redis server
#       --cache-backend-redis-db=CACHE-BACKEND-REDIS-DB                                            Database number for the cache
#       --cache-backend-redis-port=CACHE-BACKEND-REDIS-PORT                                        Redis server listen port
#       --cache-backend-redis-password=CACHE-BACKEND-REDIS-PASSWORD                                Redis server password
#       --cache-backend-redis-compress-data=CACHE-BACKEND-REDIS-COMPRESS-DATA                      Set to 0 to disable compression (default is 1, enabled)
#       --cache-backend-redis-compression-lib=CACHE-BACKEND-REDIS-COMPRESSION-LIB                  Compression lib to use [snappy,lzf,l4z,zstd,gzip] (leave blank to determine automatically)
#       --cache-id-prefix=CACHE-ID-PREFIX                                                          ID prefix for cache keys
#       --allow-parallel-generation                                                                Allow generate cache in non-blocking way
#       --page-cache=PAGE-CACHE                                                                    Default cache handler
#       --page-cache-redis-server=PAGE-CACHE-REDIS-SERVER                                          Redis server
#       --page-cache-redis-db=PAGE-CACHE-REDIS-DB                                                  Database number for the cache
#       --page-cache-redis-port=PAGE-CACHE-REDIS-PORT                                              Redis server listen port
#       --page-cache-redis-password=PAGE-CACHE-REDIS-PASSWORD                                      Redis server password
#       --page-cache-redis-compress-data=PAGE-CACHE-REDIS-COMPRESS-DATA                            Set to 1 to compress the full page cache (use 0 to disable)
#       --page-cache-redis-compression-lib=PAGE-CACHE-REDIS-COMPRESSION-LIB                        Compression library to use [snappy,lzf,l4z,zstd,gzip] (leave blank to determine automatically)
#       --page-cache-id-prefix=PAGE-CACHE-ID-PREFIX                                                ID prefix for cache keys
#       --lock-provider=LOCK-PROVIDER                                                              Lock provider name [default: "db"]
#       --lock-db-prefix=LOCK-DB-PREFIX                                                            Installation specific lock prefix to avoid lock conflicts
#       --lock-zookeeper-host=LOCK-ZOOKEEPER-HOST                                                  Host and port to connect to Zookeeper cluster. For example: 127.0.0.1:2181
#       --lock-zookeeper-path=LOCK-ZOOKEEPER-PATH                                                  The path where Zookeeper will save locks. The default path is: /magento/locks
#       --lock-file-path=LOCK-FILE-PATH                                                            The path where file locks will be saved.
#       --document-root-is-pub=DOCUMENT-ROOT-IS-PUB                                                Flag to show is Pub is on root, can be true or false only [default: true]
#       --backpressure-logger=BACKPRESSURE-LOGGER                                                  Backpressure logger handler
#       --backpressure-logger-redis-server=BACKPRESSURE-LOGGER-REDIS-SERVER                        Redis server
#       --backpressure-logger-redis-port=BACKPRESSURE-LOGGER-REDIS-PORT                            Redis server listen port
#       --backpressure-logger-redis-timeout=BACKPRESSURE-LOGGER-REDIS-TIMEOUT                      Redis server timeout
#       --backpressure-logger-redis-persistent=BACKPRESSURE-LOGGER-REDIS-PERSISTENT                Redis persistent
#       --backpressure-logger-redis-db=BACKPRESSURE-LOGGER-REDIS-DB                                Redis db number
#       --backpressure-logger-redis-password=BACKPRESSURE-LOGGER-REDIS-PASSWORD                    Redis server password
#       --backpressure-logger-redis-user=BACKPRESSURE-LOGGER-REDIS-USER                            Redis server user
#       --backpressure-logger-id-prefix=BACKPRESSURE-LOGGER-ID-PREFIX                              ID prefix for keys
#       --base-url=BASE-URL                                                                        URL the store is supposed to be available at. Deprecated, use config:set with path web/unsecure/base_url
#       --language=LANGUAGE                                                                        Default language code. Deprecated, use config:set with path general/locale/code
#       --timezone=TIMEZONE                                                                        Default time zone code. Deprecated, use config:set with path general/locale/timezone
#       --currency=CURRENCY                                                                        Default currency code. Deprecated, use config:set with path currency/options/base, currency/options/default and currency/options/allow
#       --use-rewrites=USE-REWRITES                                                                Use rewrites. Deprecated, use config:set with path web/seo/use_rewrites
#       --use-secure=USE-SECURE                                                                    Use secure URLs. Enable this option only if SSL is available. Deprecated, use config:set with path web/secure/use_in_frontend
#       --base-url-secure=BASE-URL-SECURE                                                          Base URL for SSL connection. Deprecated, use config:set with path web/secure/base_url
#       --use-secure-admin=USE-SECURE-ADMIN                                                        Run admin interface with SSL. Deprecated, use config:set with path web/secure/use_in_adminhtml
#       --admin-use-security-key=ADMIN-USE-SECURITY-KEY                                            Whether to use a "security key" feature in Magento Admin URLs and forms. Deprecated, use config:set with path admin/security/use_form_key
#       --admin-user[=ADMIN-USER]                                                                  Admin user
#       --admin-password[=ADMIN-PASSWORD]                                                          Admin password
#       --admin-email[=ADMIN-EMAIL]                                                                Admin email
#       --admin-firstname[=ADMIN-FIRSTNAME]                                                        Admin first name
#       --admin-lastname[=ADMIN-LASTNAME]                                                          Admin last name
#       --search-engine=SEARCH-ENGINE                                                              Search engine. Values: elasticsearch7, elasticsearch8, opensearch
#       --elasticsearch-host=ELASTICSEARCH-HOST                                                    Elasticsearch server host.
#       --elasticsearch-port=ELASTICSEARCH-PORT                                                    Elasticsearch server port.
#       --elasticsearch-enable-auth=ELASTICSEARCH-ENABLE-AUTH                                      Set to 1 to enable authentication. (default is 0, disabled)
#       --elasticsearch-username=ELASTICSEARCH-USERNAME                                            Elasticsearch username. Only applicable if HTTP auth is enabled
#       --elasticsearch-password=ELASTICSEARCH-PASSWORD                                            Elasticsearch password. Only applicable if HTTP auth is enabled
#       --elasticsearch-index-prefix=ELASTICSEARCH-INDEX-PREFIX                                    Elasticsearch index prefix.
#       --elasticsearch-timeout=ELASTICSEARCH-TIMEOUT                                              Elasticsearch server timeout.
#       --opensearch-host=OPENSEARCH-HOST                                                          OpenSearch server host.
#       --opensearch-port=OPENSEARCH-PORT                                                          OpenSearch server port.
#       --opensearch-enable-auth=OPENSEARCH-ENABLE-AUTH                                            Set to 1 to enable authentication. (default is 0, disabled)
#       --opensearch-username=OPENSEARCH-USERNAME                                                  OpenSearch username. Only applicable if HTTP auth is enabled
#       --opensearch-password=OPENSEARCH-PASSWORD                                                  OpenSearch password. Only applicable if HTTP auth is enabled
#       --opensearch-index-prefix=OPENSEARCH-INDEX-PREFIX                                          OpenSearch index prefix.
#       --opensearch-timeout=OPENSEARCH-TIMEOUT                                                    OpenSearch server timeout.
#       --cleanup-database                                                                         Cleanup the database before installation
#       --sales-order-increment-prefix=SALES-ORDER-INCREMENT-PREFIX                                Sales order number prefix
#       --use-sample-data                                                                          Use sample data
#       --enable-modules[=ENABLE-MODULES]                                                          List of comma-separated module names. That must be included during installation. Available magic param "all".
#       --disable-modules[=DISABLE-MODULES]                                                        List of comma-separated module names. That must be avoided during installation. Available magic param "all".
#       --convert-old-scripts[=CONVERT-OLD-SCRIPTS]                                                Allows to convert old scripts (InstallSchema, UpgradeSchema) to db_schema.xml format [default: false]
#   -i, --interactive                                                                              Interactive Magento installation
#       --safe-mode[=SAFE-MODE]                                                                    Safe installation of Magento with dumps on destructive operations, like column removal
#       --data-restore[=DATA-RESTORE]                                                              Restore removed data from dumps
#       --dry-run[=DRY-RUN]                                                                        Magento Installation will be run in dry-run mode [default: false]
#       --magento-init-params=MAGENTO-INIT-PARAMS                                                  Add to any command to customize Magento initialization parameters

bin/magento setup:install \
    --enable-debug-logging=false                                                               \    # Enable debug logging
    --enable-syslog-logging=false                                                              \    # Enable syslog logging
    --backend-frontname=mageos                                                                 \    # Backend frontname (will be autogenerated if missing)
    --remote-storage-driver=aws-s3                                                             \    # Remote storage driver [default: "file"]
    --remote-storage-prefix=mageos                                                             \    # Remote storage prefix [default: ""]
    --remote-storage-endpoint=http://127.0.0.1:9000                                            \    # Remote storage endpoint
    --remote-storage-bucket=magento                                                            \    # Remote storage bucket
    --remote-storage-region=eu-central-1                                                       \    # Remote storage region
    --remote-storage-key=magento                                                               \    # Remote storage access key [default: ""]
    --remote-storage-secret=magento                                                            \    # Remote storage secret key [default: ""]
    --remote-storage-path-style=1                                                              \    # Remote storage path style [default: "0"]
    --id_salt=ID_SALT                                                                          \    # GraphQl Salt
    --config-async=CONFIG-ASYNC                                                                \    # Enable async Admin Config Save? 1 - Yes, 0 - No [default: 0]
    --amqp-host=AMQP-HOST                                                                      \    # Amqp server host [default: ""]
    --amqp-port=AMQP-PORT                                                                      \    # Amqp server port [default: "5672"]
    --amqp-user=AMQP-USER                                                                      \    # Amqp server username [default: ""]
    --amqp-password=AMQP-PASSWORD                                                              \    # Amqp server password [default: ""]
    --amqp-virtualhost=AMQP-VIRTUALHOST                                                        \    # Amqp virtualhost [default: "/"]
    --amqp-ssl=AMQP-SSL                                                                        \    # Amqp SSL [default: ""]
    --amqp-ssl-options=AMQP-SSL-OPTIONS                                                        \    # Amqp SSL Options (JSON) [default: ""]
    --consumers-wait-for-messages=CONSUMERS-WAIT-FOR-MESSAGES                                  \    # Should consumers wait for a message from the queue? 1 - Yes, 0 - No [default: 1]
    --queue-default-connection=QUEUE-DEFAULT-CONNECTION                                        \    # Message queues default connection. Can be 'db', 'amqp' or a custom queue system.The queue system must be installed and configured, otherwise messages won't be processed correctly.
    --key=KEY                                                                                  \    # Encryption key
    --db-host=127.0.0.1                                                                        \    # Database server host [default: "localhost"]
    --db-name=magento                                                                          \    # Database name [default: "magento2"]
    --db-user=magento                                                                          \    # Database server username [default: "root"]
    --db-engine=innodb                                                                         \    # Database server engine [default: "innodb"]
    --db-password=magento                                                                      \    # Database server password [default: ""]
    --db-prefix=""                                                                             \    # Database table prefix [default: ""]
    --db-model=mysql4                                                                          \    # Database type [default: "mysql4"]
    --db-init-statements="SET NAMES utf8;"                                                     \    # Database  initial set of commands [default: "SET NAMES utf8;"]
    --skip-db-validation                                                                       \    # If specified, then db connection validation will be skipped
    --http-cache-hosts=HTTP-CACHE-HOSTS                                                        \    # http Cache hosts
    --db-ssl-key=DB-SSL-KEY                                                                    \    # Full path of client key file in order to establish db connection through SSL [default: ""]
    --db-ssl-cert=DB-SSL-CERT                                                                  \    # Full path of client certificate file in order to establish db connection through SSL [default: ""]
    --db-ssl-ca=DB-SSL-CA                                                                      \    # Full path of server certificate file in order to establish db connection through SSL [default: ""]
    --db-ssl-verify                                                                            \    # Verify server certification
    --session-save=SESSION-SAVE                                                                \    # Session save handler [default: "files"]
    --session-save-redis-host=SESSION-SAVE-REDIS-HOST                                          \    # Fully qualified host name, IP address, or absolute path if using UNIX sockets
    --session-save-redis-port=SESSION-SAVE-REDIS-PORT                                          \    # Redis server listen port
    --session-save-redis-password=SESSION-SAVE-REDIS-PASSWORD                                  \    # Redis server password
    --session-save-redis-timeout=SESSION-SAVE-REDIS-TIMEOUT                                    \    # Connection timeout, in seconds
    --session-save-redis-persistent-id=SESSION-SAVE-REDIS-PERSISTENT-ID                        \    # Unique string to enable persistent connections
    --session-save-redis-db=SESSION-SAVE-REDIS-DB                                              \    # Redis database number
    --session-save-redis-compression-threshold=SESSION-SAVE-REDIS-COMPRESSION-THRESHOLD        \    # Redis compression threshold
    --session-save-redis-compression-lib=SESSION-SAVE-REDIS-COMPRESSION-LIB                    \    # Redis compression library. Values: gzip (default), lzf, lz4, snappy
    --session-save-redis-log-level=SESSION-SAVE-REDIS-LOG-LEVEL                                \    # Redis log level. Values: 0 (least verbose) to 7 (most verbose)
    --session-save-redis-max-concurrency=SESSION-SAVE-REDIS-MAX-CONCURRENCY                    \    # Maximum number of processes that can wait for a lock on one session
    --session-save-redis-break-after-frontend=SESSION-SAVE-REDIS-BREAK-AFTER-FRONTEND          \    # Number of seconds to wait before trying to break a lock for frontend session
    --session-save-redis-break-after-adminhtml=SESSION-SAVE-REDIS-BREAK-AFTER-ADMINHTML        \    # Number of seconds to wait before trying to break a lock for Admin session
    --session-save-redis-first-lifetime=SESSION-SAVE-REDIS-FIRST-LIFETIME                      \    # Lifetime, in seconds, of session for non-bots on the first write (use 0 to disable)
    --session-save-redis-bot-first-lifetime=SESSION-SAVE-REDIS-BOT-FIRST-LIFETIME              \    # Lifetime, in seconds, of session for bots on the first write (use 0 to disable)
    --session-save-redis-bot-lifetime=SESSION-SAVE-REDIS-BOT-LIFETIME                          \    # Lifetime of session for bots on subsequent writes (use 0 to disable)
    --session-save-redis-disable-locking=SESSION-SAVE-REDIS-DISABLE-LOCKING                    \    # Redis disable locking. Values: false (default), true
    --session-save-redis-min-lifetime=SESSION-SAVE-REDIS-MIN-LIFETIME                          \    # Redis min session lifetime, in seconds
    --session-save-redis-max-lifetime=SESSION-SAVE-REDIS-MAX-LIFETIME                          \    # Redis max session lifetime, in seconds
    --session-save-redis-sentinel-master=SESSION-SAVE-REDIS-SENTINEL-MASTER                    \    # Redis Sentinel master
    --session-save-redis-sentinel-servers=SESSION-SAVE-REDIS-SENTINEL-SERVERS                  \    # Redis Sentinel servers, comma separated
    --session-save-redis-sentinel-verify-master=SESSION-SAVE-REDIS-SENTINEL-VERIFY-MASTER      \    # Redis Sentinel verify master. Values: false (default), true
    --session-save-redis-sentinel-connect-retries=SESSION-SAVE-REDIS-SENTINEL-CONNECT-RETRIES  \    # Redis Sentinel connect retries.
    --cache-backend=CACHE-BACKEND                                                              \    # Default cache handler
    --cache-backend-redis-server=CACHE-BACKEND-REDIS-SERVER                                    \    # Redis server
    --cache-backend-redis-db=CACHE-BACKEND-REDIS-DB                                            \    # Database number for the cache
    --cache-backend-redis-port=CACHE-BACKEND-REDIS-PORT                                        \    # Redis server listen port
    --cache-backend-redis-password=CACHE-BACKEND-REDIS-PASSWORD                                \    # Redis server password
    --cache-backend-redis-compress-data=CACHE-BACKEND-REDIS-COMPRESS-DATA                      \    # Set to 0 to disable compression (default is 1, enabled)
    --cache-backend-redis-compression-lib=CACHE-BACKEND-REDIS-COMPRESSION-LIB                  \    # Compression lib to use [snappy,lzf,l4z,zstd,gzip] (leave blank to determine automatically)
    --cache-id-prefix=CACHE-ID-PREFIX                                                          \    # ID prefix for cache keys
    --allow-parallel-generation                                                                \    # Allow generate cache in non-blocking way
    --page-cache=PAGE-CACHE                                                                    \    # Default cache handler
    --page-cache-redis-server=PAGE-CACHE-REDIS-SERVER                                          \    # Redis server
    --page-cache-redis-db=PAGE-CACHE-REDIS-DB                                                  \    # Database number for the cache
    --page-cache-redis-port=PAGE-CACHE-REDIS-PORT                                              \    # Redis server listen port
    --page-cache-redis-password=PAGE-CACHE-REDIS-PASSWORD                                      \    # Redis server password
    --page-cache-redis-compress-data=PAGE-CACHE-REDIS-COMPRESS-DATA                            \    # Set to 1 to compress the full page cache (use 0 to disable)
    --page-cache-redis-compression-lib=PAGE-CACHE-REDIS-COMPRESSION-LIB                        \    # Compression library to use [snappy,lzf,l4z,zstd,gzip] (leave blank to determine automatically)
    --page-cache-id-prefix=PAGE-CACHE-ID-PREFIX                                                \    # ID prefix for cache keys
    --lock-provider=LOCK-PROVIDER                                                              \    # Lock provider name [default: "db"]
    --lock-db-prefix=LOCK-DB-PREFIX                                                            \    # Installation specific lock prefix to avoid lock conflicts
    --lock-zookeeper-host=LOCK-ZOOKEEPER-HOST                                                  \    # Host and port to connect to Zookeeper cluster. For example: 127.0.0.1:2181
    --lock-zookeeper-path=LOCK-ZOOKEEPER-PATH                                                  \    # The path where Zookeeper will save locks. The default path is: /magento/locks
    --lock-file-path=LOCK-FILE-PATH                                                            \    # The path where file locks will be saved.
    --document-root-is-pub=DOCUMENT-ROOT-IS-PUB                                                \    # Flag to show is Pub is on root, can be true or false only [default: true]
    --backpressure-logger=BACKPRESSURE-LOGGER                                                  \    # Backpressure logger handler
    --backpressure-logger-redis-server=BACKPRESSURE-LOGGER-REDIS-SERVER                        \    # Redis server
    --backpressure-logger-redis-port=BACKPRESSURE-LOGGER-REDIS-PORT                            \    # Redis server listen port
    --backpressure-logger-redis-timeout=BACKPRESSURE-LOGGER-REDIS-TIMEOUT                      \    # Redis server timeout
    --backpressure-logger-redis-persistent=BACKPRESSURE-LOGGER-REDIS-PERSISTENT                \    # Redis persistent
    --backpressure-logger-redis-db=BACKPRESSURE-LOGGER-REDIS-DB                                \    # Redis db number
    --backpressure-logger-redis-password=BACKPRESSURE-LOGGER-REDIS-PASSWORD                    \    # Redis server password
    --backpressure-logger-redis-user=BACKPRESSURE-LOGGER-REDIS-USER                            \    # Redis server user
    --backpressure-logger-id-prefix=BACKPRESSURE-LOGGER-ID-PREFIX                              \    # ID prefix for keys
    --base-url=BASE-URL                                                                        \    # URL the store is supposed to be available at. Deprecated, use config:set with path web/unsecure/base_url
    --language=LANGUAGE                                                                        \    # Default language code. Deprecated, use config:set with path general/locale/code
    --timezone=TIMEZONE                                                                        \    # Default time zone code. Deprecated, use config:set with path general/locale/timezone
    --currency=CURRENCY                                                                        \    # Default currency code. Deprecated, use config:set with path currency/options/base, currency/options/default and currency/options/allow
    --use-rewrites=USE-REWRITES                                                                \    # Use rewrites. Deprecated, use config:set with path web/seo/use_rewrites
    --use-secure=USE-SECURE                                                                    \    # Use secure URLs. Enable this option only if SSL is available. Deprecated, use config:set with path web/secure/use_in_frontend
    --base-url-secure=BASE-URL-SECURE                                                          \    # Base URL for SSL connection. Deprecated, use config:set with path web/secure/base_url
    --use-secure-admin=USE-SECURE-ADMIN                                                        \    # Run admin interface with SSL. Deprecated, use config:set with path web/secure/use_in_adminhtml
    --admin-use-security-key=ADMIN-USE-SECURITY-KEY                                            \    # Whether to use a "security key" feature in Magento Admin URLs and forms. Deprecated, use config:set with path admin/security/use_form_key
    --admin-user[=ADMIN-USER]                                                                  \    # Admin user
    --admin-password[=ADMIN-PASSWORD]                                                          \    # Admin password
    --admin-email[=ADMIN-EMAIL]                                                                \    # Admin email
    --admin-firstname[=ADMIN-FIRSTNAME]                                                        \    # Admin first name
    --admin-lastname[=ADMIN-LASTNAME]                                                          \    # Admin last name
    --search-engine=SEARCH-ENGINE                                                              \    # Search engine. Values: elasticsearch7, elasticsearch8, opensearch
    --elasticsearch-host=ELASTICSEARCH-HOST                                                    \    # Elasticsearch server host.
    --elasticsearch-port=ELASTICSEARCH-PORT                                                    \    # Elasticsearch server port.
    --elasticsearch-enable-auth=ELASTICSEARCH-ENABLE-AUTH                                      \    # Set to 1 to enable authentication. (default is 0, disabled)
    --elasticsearch-username=ELASTICSEARCH-USERNAME                                            \    # Elasticsearch username. Only applicable if HTTP auth is enabled
    --elasticsearch-password=ELASTICSEARCH-PASSWORD                                            \    # Elasticsearch password. Only applicable if HTTP auth is enabled
    --elasticsearch-index-prefix=ELASTICSEARCH-INDEX-PREFIX                                    \    # Elasticsearch index prefix.
    --elasticsearch-timeout=ELASTICSEARCH-TIMEOUT                                              \    # Elasticsearch server timeout.
    --opensearch-host=OPENSEARCH-HOST                                                          \    # OpenSearch server host.
    --opensearch-port=OPENSEARCH-PORT                                                          \    # OpenSearch server port.
    --opensearch-enable-auth=OPENSEARCH-ENABLE-AUTH                                            \    # Set to 1 to enable authentication. (default is 0, disabled)
    --opensearch-username=OPENSEARCH-USERNAME                                                  \    # OpenSearch username. Only applicable if HTTP auth is enabled
    --opensearch-password=OPENSEARCH-PASSWORD                                                  \    # OpenSearch password. Only applicable if HTTP auth is enabled
    --opensearch-index-prefix=OPENSEARCH-INDEX-PREFIX                                          \    # OpenSearch index prefix.
    --opensearch-timeout=OPENSEARCH-TIMEOUT                                                    \    # OpenSearch server timeout.
    --cleanup-database                                                                         \    # Cleanup the database before installation
    --sales-order-increment-prefix=SALES-ORDER-INCREMENT-PREFIX                                \    # Sales order number prefix
    --use-sample-data                                                                          \    # Use sample data
    --enable-modules[=ENABLE-MODULES]                                                          \    # List of comma-separated module names. That must be included during installation. Available magic param "all".
    --disable-modules[=DISABLE-MODULES]                                                        \    # List of comma-separated module names. That must be avoided during installation. Available magic param "all".
    --convert-old-scripts[=CONVERT-OLD-SCRIPTS]                                                \    # Allows to convert old scripts (InstallSchema, UpgradeSchema) to db_schema.xml format [default: false]
    --interactive                                                                              \    # Interactive Magento installation
    --safe-mode[=SAFE-MODE]                                                                    \    # Safe installation of Magento with dumps on destructive operations, like column removal
    --data-restore[=DATA-RESTORE]                                                              \    # Restore removed data from dumps
    --dry-run[=DRY-RUN]                                                                        \    # Magento Installation will be run in dry-run mode [default: false]
    --magento-init-params=MAGENTO-INIT-PARAMS                                                  \    # Add to any command to customize Magento initialization parameters